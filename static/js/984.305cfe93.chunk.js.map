{"version":3,"file":"static/js/984.305cfe93.chunk.js","mappings":"oMAIO,MAAMA,EAAwB,CACnCC,EAAAA,KAAKC,KAAIC,EAAAA,EAAAA,OAAqB,CAACC,EAAGC,EAAKC,IAC9BD,EAAIC,EAAIC,KAAKC,OAIlBA,EAA2B,CAC/B,CACEC,GAAI,KACJC,KAAM,eACNC,YAAa,qFACbC,MAAO,UACPC,SACE,8HAEJ,CACEJ,GAAI,KACJC,KAAM,qBACNC,YAAa,wEACbC,MAAO,UACPC,SACE,kK,kCCnBC,MAAMC,EAAsB,CACjCb,EAAAA,KAAKC,KACHa,EAAAA,EAAAA,IAAgB,CACdC,WAAY,UAEd,CAACZ,EAAGC,EAAKC,IACAD,EAAIC,EAAIC,KAAKU,MAGxBhB,EAAAA,KAAKC,KACHa,EAAAA,EAAAA,IAAgB,CACdC,WAAY,UAEd,CAACZ,EAAGC,EAAKC,IACAD,EAAIC,EAAIC,KAAKU,MAGxBhB,EAAAA,KAAKC,KAAIgB,EAAAA,EAAAA,IAAqB,eAAe,CAACC,EAAKd,EAAKC,KACtD,MAAM,UAAEc,GAAcD,EAAIE,OACpBC,EAAUL,EAAmBM,QAAQC,MAAMC,GAASA,EAAKhB,KAAOiB,OAAON,KAC7E,OAAOf,EAAIC,EAAIC,KAAKe,GAAS,IAE/BrB,EAAAA,KAAKC,KAAIyB,EAAAA,EAAAA,IAAsB,eAAe,CAACvB,EAAGC,EAAKC,IAC9CD,EACLC,EAAIC,KAAK,CACP,CACEE,GAAI,EACJC,KAAM,WACNkB,SAAU,GACVR,UAAW,GAEb,CACEX,GAAI,EACJC,KAAM,WACNkB,SAAU,GACVR,UAAW,SAMfH,EAAqB,CACzBM,QAAS,CACP,CACEd,GAAI,QACJC,KAAM,yHACNG,SAAU,mGACVgB,MAAO,OAET,CACEpB,GAAI,QACJC,KAAM,uDACNG,SAAU,mGACVgB,MAAO,KAET,CACEpB,GAAI,QACJC,KAAM,4JACNG,SAAU,mGACVgB,MAAO,OAET,CACEpB,GAAI,QACJC,KAAM,sFACNG,SAAU,mGACVgB,MAAO,OAET,CACEpB,GAAI,QACJC,KAAM,oHACNG,SAAU,mGACVgB,MAAO,QAGXC,OAAQ,EACRC,cAAe,EACfC,KAAM,GACNC,MAAM,G,cC/ED,MAAMC,EAAgB,CAC3BjC,EAAAA,KAAKkC,KAAK,GAADC,OAAIC,EAAAA,GAAQ,uBAAsB,CAAClB,EAAKd,EAAKC,KACpD,MAAM,MAAEgC,EAAK,SAAEC,GAAapB,EAAIqB,KAEhC,OAAIF,GAASC,EACJlC,EACLC,EAAImC,OAAO,KACXnC,EAAIC,KAAK,CACP+B,QACAI,MAAO,WAKNrC,EACLC,EAAImC,OAAO,KACXnC,EAAIC,KAAK,CACPoC,MAAO,kBAEV,KCjBQC,EAAuB,CAClC3C,EAAAA,KAAKC,IAAI,GAADkC,OAAIC,EAAAA,GAAQ,gBAAe,CAACjC,EAAGC,EAAKC,IACnCD,EAAIC,EAAImC,OAAO,KAAMnC,EAAIC,KAAKsC,OAInCA,EAA4C,CAChDtB,QAAS,CACP,CACEb,KAAM,YACNmB,MAAO,IACPD,SAAU,EACVf,SACE,6HACFiC,cAAe,cAEjB,CACEpC,KAAM,YACNmB,MAAO,IACPD,SAAU,GACVf,SACE,6HACFiC,cAAe,cAEjB,CACEpC,KAAM,YACNmB,MAAO,KACPD,SAAU,GACVf,SACE,6HACFiC,cAAe,eAGnBC,SAAU,CACRC,KAAM,CACJC,QAAQ,EACRC,UAAU,EACVC,OAAO,GAETC,WAAY,EACZC,SAAU,GACVC,OAAQ,EACRC,SAAS,EACTC,OAAO,GAETC,WAAY,EACZ1B,cAAe,GACfE,MAAM,EACNH,OAAQ,EACRE,KAAM,GACN0B,iBAAkB,EAClBC,OAAO,EACPR,OAAO,GCtDIS,EAAmB,CAC9B3D,EAAAA,KAAKkC,KAAK,GAADC,OAAIC,EAAAA,GAAQ,0BAAyB,CAAClB,EAAKd,EAAKC,KACvD,MAAM,MAAEgC,EAAK,SAAEC,GAAapB,EAAIqB,KAEhC,OAAIF,GAASC,EACJlC,EACLC,EAAImC,OAAO,KACXnC,EAAIC,KAAK,CACP+B,QACAI,MAAO,WAKNrC,EACLC,EAAImC,OAAO,KACXnC,EAAIC,KAAK,CACPoC,MAAO,kBAEV,KCjBQkB,EAAsB,CACjC5D,EAAAA,KAAKC,IAAI,GAADkC,OAAIC,EAAAA,GAAQ,gBAAe,CAACjC,EAAGC,EAAKC,IACnCD,EAAIC,EAAImC,OAAO,KAAMnC,EAAIC,KAAKsC,MAEvC5C,EAAAA,KAAKkC,KAAK,GAADC,OAAIC,EAAAA,GAAQ,gBAAe,CAAClB,EAAKd,EAAKC,KAC7C,MAAM,UAAEc,GAAcD,EAAIqB,KAE1B,OAAKpB,EASEf,EAAIC,EAAImC,OAAO,KAAMnC,EAAIC,KAAK,CAAEE,GAAI,EAAGW,UAAWA,KARhDf,EACLC,EAAImC,OAAO,KACXnC,EAAIC,KAAK,CACPoC,MAAO,cACPmB,QAAS,2BAIuD,IAExE7D,EAAAA,KAAK8D,OAAO,GAAD3B,OAAIC,EAAAA,GAAQ,wBAAuB,CAAClB,EAAKd,EAAKC,KACvD,MAAM,OAAE0D,GAAW7C,EAAIE,OACvB,OAAK2C,EAQE3D,EAAIC,EAAImC,OAAO,MAPbpC,EACLC,EAAImC,OAAO,KACXnC,EAAIC,KAAK,CACPuD,QAAS,mBAIY,KAIzBjB,EAA2C,CAC/CtB,QAAS,CACP,CACEyC,OAAQ,EACRtD,KAAM,YACNmB,MAAO,IACPhB,SACE,8HAEJ,CACEmD,OAAQ,EACRtD,KAAM,YACNmB,MAAO,IACPhB,SACE,+HAGNkC,SAAU,CACRC,KAAM,CACJC,QAAQ,EACRC,UAAU,EACVC,OAAO,GAETC,WAAY,EACZC,SAAU,GACVC,OAAQ,EACRC,SAAS,EACTC,OAAO,GAETC,WAAY,EACZ1B,cAAe,GACfE,MAAM,EACNH,OAAQ,EACRE,KAAM,GACN0B,iBAAkB,EAClBC,OAAO,EACPR,OAAO,GChEIc,GAASC,EAAAA,EAAAA,gBACjBlE,KACAc,KACA8C,KACA1B,KACA2B,KACAjB,E","sources":["api/hooks/categories.mock.ts","api/hooks/products.mock.ts","api/hooks/login.mock.ts","api/hooks/orderList.mock.ts","api/hooks/register.mock.ts","api/hooks/wishs.mock.ts","mocks/browser.ts"],"sourcesContent":["import { rest } from 'msw';\r\n\r\nimport { getCategoriesPath } from './useGetCategorys';\r\n\r\nexport const categoriesMockHandler = [\r\n  rest.get(getCategoriesPath(), (_, res, ctx) => {\r\n    return res(ctx.json(CATEGORIES_RESPONSE_DATA));\r\n  }),\r\n];\r\n\r\nconst CATEGORIES_RESPONSE_DATA = [\r\n  {\r\n    id: 2920,\r\n    name: '생일',\r\n    description: '감동을 높여줄 생일 선물 리스트',\r\n    color: '#5949a3',\r\n    imageUrl:\r\n      'https://img1.daumcdn.net/thumb/S104x104/?fname=https%3A%2F%2Ft1.daumcdn.net%2Fgift%2Fhome%2Ftheme%2F292020231106_MXMUB.png',\r\n  },\r\n  {\r\n    id: 2930,\r\n    name: '교환권',\r\n    description: '놓치면 후회할 교환권 특가',\r\n    color: '#9290C3',\r\n    imageUrl:\r\n      'https://img1.daumcdn.net/thumb/S104x104/?fname=https%3A%2F%2Fst.kakaocdn.net%2Fproduct%2Fgift%2Fproduct%2F20240131153049_5a22b137a8d346e9beb020a7a7f4254a.jpg',\r\n  },\r\n];\r\n","import { rest } from 'msw';\r\n\r\nimport { getProductDetailPath } from './useGetProductDetail';\r\nimport { getProductOptionsPath } from './useGetProductOptions';\r\nimport { getProductsPath } from './useGetProducts';\r\n\r\nexport const productsMockHandler = [\r\n  rest.get(\r\n    getProductsPath({\r\n      categoryId: '2920',\r\n    }),\r\n    (_, res, ctx) => {\r\n      return res(ctx.json(PRODUCTS_MOCK_DATA));\r\n    },\r\n  ),\r\n  rest.get(\r\n    getProductsPath({\r\n      categoryId: '2930',\r\n    }),\r\n    (_, res, ctx) => {\r\n      return res(ctx.json(PRODUCTS_MOCK_DATA));\r\n    },\r\n  ),\r\n  rest.get(getProductDetailPath(':productId'), (req, res, ctx) => {\r\n    const { productId } = req.params;\r\n    const product = PRODUCTS_MOCK_DATA.content.find((item) => item.id === Number(productId));\r\n    return res(ctx.json(product));\r\n  }),\r\n  rest.get(getProductOptionsPath(':productId'), (_, res, ctx) => {\r\n    return res(\r\n      ctx.json([\r\n        {\r\n          id: 1,\r\n          name: 'Option A',\r\n          quantity: 10,\r\n          productId: 1,\r\n        },\r\n        {\r\n          id: 2,\r\n          name: 'Option B',\r\n          quantity: 20,\r\n          productId: 1,\r\n        },\r\n      ]),\r\n    );\r\n  }),\r\n];\r\nconst PRODUCTS_MOCK_DATA = {\r\n  content: [\r\n    {\r\n      id: 3245119,\r\n      name: '[단독각인] 피렌체 1221 에디션 오드코롱 50ml (13종 택1)',\r\n      imageUrl: 'https://st.kakaocdn.net/product/gift/product/20240215083306_8e1db057580145829542463a84971ae3.png',\r\n      price: 145000,\r\n    },\r\n    {\r\n      id: 2263833,\r\n      name: '외식 통합권 10만원권',\r\n      imageUrl: 'https://st.kakaocdn.net/product/gift/product/20200513102805_4867c1e4a7ae43b5825e9ae14e2830e3.png',\r\n      price: 100000,\r\n    },\r\n    {\r\n      id: 6502823,\r\n      name: '[선물포장/미니퍼퓸증정] 디켄터 리드 디퓨저 300ml + 메세지카드',\r\n      imageUrl: 'https://st.kakaocdn.net/product/gift/product/20240215112140_11f857e972bc4de6ac1d2f1af47ce182.jpg',\r\n      price: 108000,\r\n    },\r\n    {\r\n      id: 1181831,\r\n      name: '[선물포장] 소바쥬 오 드 뚜왈렛 60ML',\r\n      imageUrl: 'https://st.kakaocdn.net/product/gift/product/20240214150740_ad25267defa64912a7c030a7b57dc090.jpg',\r\n      price: 122000,\r\n    },\r\n    {\r\n      id: 1379982,\r\n      name: '[정관장] 홍삼정 에브리타임 리미티드 (10ml x 30포)',\r\n      imageUrl: 'https://st.kakaocdn.net/product/gift/product/20240118135914_a6e1a7442ea04aa49add5e02ed62b4c3.jpg',\r\n      price: 133000,\r\n    },\r\n  ],\r\n  number: 0,\r\n  totalElements: 5,\r\n  size: 10,\r\n  last: true,\r\n};\r\n","import { rest } from 'msw';\r\n\r\nimport { BASE_URL } from '../instance';\r\n\r\nexport const loginHandlers = [\r\n  rest.post(`${BASE_URL}/api/members/login`, (req, res, ctx) => {\r\n    const { email, password } = req.body as { email: string; password: string };\r\n\r\n    if (email && password) {\r\n      return res(\r\n        ctx.status(200),\r\n        ctx.json({\r\n          email,\r\n          token: 'token',\r\n        }),\r\n      );\r\n    }\r\n\r\n    return res(\r\n      ctx.status(400),\r\n      ctx.json({\r\n        error: 'Invalid input',\r\n      }),\r\n    );\r\n  }),\r\n];\r\n","import { rest } from 'msw';\r\n\r\nimport { BASE_URL } from '../instance';\r\n\r\nimport type { OrderlistResponse } from '@/types';\r\n\r\nexport const orderlistMockHandler = [\r\n  rest.get(`${BASE_URL}/api/orders`, (_, res, ctx) => {\r\n    return res(ctx.status(200), ctx.json(WISHLIST_RESPONSE_DATA));\r\n  }),\r\n];\r\n\r\nconst WISHLIST_RESPONSE_DATA: OrderlistResponse = {\r\n  content: [\r\n    {\r\n      name: 'Product A',\r\n      price: 100,\r\n      quantity: 2,\r\n      imageUrl:\r\n        'https://img1.daumcdn.net/thumb/S104x104/?fname=https%3A%2F%2Ft1.daumcdn.net%2Fgift%2Fhome%2Ftheme%2F292020231106_MXMUB.png',\r\n      orderDateTime: '2024-07-20',\r\n    },\r\n    {\r\n      name: 'Product B',\r\n      price: 10000,\r\n      quantity: 50,\r\n      imageUrl:\r\n        'https://img1.daumcdn.net/thumb/S104x104/?fname=https%3A%2F%2Ft1.daumcdn.net%2Fgift%2Fhome%2Ftheme%2F292020231106_MXMUB.png',\r\n      orderDateTime: '2024-07-20',\r\n    },\r\n    {\r\n      name: 'Product C',\r\n      price: 1200,\r\n      quantity: 20,\r\n      imageUrl:\r\n        'https://img1.daumcdn.net/thumb/S104x104/?fname=https%3A%2F%2Ft1.daumcdn.net%2Fgift%2Fhome%2Ftheme%2F292020231106_MXMUB.png',\r\n      orderDateTime: '2024-07-21',\r\n    },\r\n  ],\r\n  pageable: {\r\n    sort: {\r\n      sorted: true,\r\n      unsorted: false,\r\n      empty: false,\r\n    },\r\n    pageNumber: 0,\r\n    pageSize: 10,\r\n    offset: 0,\r\n    unpaged: false,\r\n    paged: true,\r\n  },\r\n  totalPages: 5,\r\n  totalElements: 50,\r\n  last: false,\r\n  number: 0,\r\n  size: 10,\r\n  numberOfElements: 2,\r\n  first: true,\r\n  empty: false,\r\n};\r\n","import { rest } from 'msw';\r\n\r\nimport { BASE_URL } from '../instance';\r\n\r\nexport const registerHandlers = [\r\n  rest.post(`${BASE_URL}/api/members/register`, (req, res, ctx) => {\r\n    const { email, password } = req.body as { email: string; password: string };\r\n\r\n    if (email && password) {\r\n      return res(\r\n        ctx.status(201),\r\n        ctx.json({\r\n          email,\r\n          token: 'token',\r\n        }),\r\n      );\r\n    }\r\n\r\n    return res(\r\n      ctx.status(400),\r\n      ctx.json({\r\n        error: 'Invalid input',\r\n      }),\r\n    );\r\n  }),\r\n];\r\n","import { rest } from 'msw';\r\n\r\nimport { BASE_URL } from '../instance';\r\n\r\nimport type { WishlistResponse } from '@/types';\r\n\r\nexport const wishlistMockHandler = [\r\n  rest.get(`${BASE_URL}/api/wishes`, (_, res, ctx) => {\r\n    return res(ctx.status(200), ctx.json(WISHLIST_RESPONSE_DATA));\r\n  }),\r\n  rest.post(`${BASE_URL}/api/wishes`, (req, res, ctx) => {\r\n    const { productId } = req.body as { productId: number };\r\n\r\n    if (!productId) {\r\n      return res(\r\n        ctx.status(400),\r\n        ctx.json({\r\n          error: 'Bad Request',\r\n          message: 'Product ID is required',\r\n        }),\r\n      );\r\n    }\r\n    return res(ctx.status(201), ctx.json({ id: 1, productId: productId }));\r\n  }),\r\n  rest.delete(`${BASE_URL}/api/wishes/:wishId`, (req, res, ctx) => {\r\n    const { wishId } = req.params;\r\n    if (!wishId) {\r\n      return res(\r\n        ctx.status(404),\r\n        ctx.json({\r\n          message: 'Wish not found',\r\n        }),\r\n      );\r\n    }\r\n    return res(ctx.status(204));\r\n  }),\r\n];\r\n\r\nconst WISHLIST_RESPONSE_DATA: WishlistResponse = {\r\n  content: [\r\n    {\r\n      wishId: 1,\r\n      name: 'Product A',\r\n      price: 100,\r\n      imageUrl:\r\n        'https://img1.daumcdn.net/thumb/S104x104/?fname=https%3A%2F%2Ft1.daumcdn.net%2Fgift%2Fhome%2Ftheme%2F292020231106_MXMUB.png',\r\n    },\r\n    {\r\n      wishId: 2,\r\n      name: 'Product B',\r\n      price: 150,\r\n      imageUrl:\r\n        'https://img1.daumcdn.net/thumb/S104x104/?fname=https%3A%2F%2Ft1.daumcdn.net%2Fgift%2Fhome%2Ftheme%2F292020231106_MXMUB.png',\r\n    },\r\n  ],\r\n  pageable: {\r\n    sort: {\r\n      sorted: true,\r\n      unsorted: false,\r\n      empty: false,\r\n    },\r\n    pageNumber: 0,\r\n    pageSize: 10,\r\n    offset: 0,\r\n    unpaged: false,\r\n    paged: true,\r\n  },\r\n  totalPages: 5,\r\n  totalElements: 50,\r\n  last: false,\r\n  number: 0,\r\n  size: 10,\r\n  numberOfElements: 2,\r\n  first: true,\r\n  empty: false,\r\n};\r\n","import { setupWorker } from 'msw';\r\n\r\nimport { categoriesMockHandler } from '../api/hooks/categories.mock';\r\nimport { productsMockHandler } from '../api/hooks/products.mock';\r\n\r\nimport { loginHandlers } from '@/api/hooks/login.mock';\r\nimport { orderlistMockHandler } from '@/api/hooks/orderList.mock';\r\nimport { registerHandlers } from '@/api/hooks/register.mock';\r\nimport { wishlistMockHandler } from '@/api/hooks/wishs.mock';\r\n\r\nexport const worker = setupWorker(\r\n  ...categoriesMockHandler,\r\n  ...productsMockHandler,\r\n  ...registerHandlers,\r\n  ...loginHandlers,\r\n  ...wishlistMockHandler,\r\n  ...orderlistMockHandler,\r\n);\r\n"],"names":["categoriesMockHandler","rest","get","getCategoriesPath","_","res","ctx","json","CATEGORIES_RESPONSE_DATA","id","name","description","color","imageUrl","productsMockHandler","getProductsPath","categoryId","PRODUCTS_MOCK_DATA","getProductDetailPath","req","productId","params","product","content","find","item","Number","getProductOptionsPath","quantity","price","number","totalElements","size","last","loginHandlers","post","concat","BASE_URL","email","password","body","status","token","error","orderlistMockHandler","WISHLIST_RESPONSE_DATA","orderDateTime","pageable","sort","sorted","unsorted","empty","pageNumber","pageSize","offset","unpaged","paged","totalPages","numberOfElements","first","registerHandlers","wishlistMockHandler","message","delete","wishId","worker","setupWorker"],"sourceRoot":""}